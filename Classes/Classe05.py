# 5 - Classe C√≠rculo: crie uma classe que represente um c√≠rculo. Esta classe deve possuir o 
# seguinte atributo:
# ÔÇ° raio
# ÔÇ° A classe deve ter os seguintes m√©todos:
# ÔÇ° imprimir o valor do raio;
# ÔÇ° calcular a √°rea do c√≠rculo;
# ÔÇ° calcular a circunfer√™ncia do c√≠rculo.
import math

# Classe Circulo
class Circulo:
    def __init__(self, raio):
        self.raio = raio

    def imprimir_raio(self):
        """Imprime o valor do raio do c√≠rculo."""
        print(f"Raio do c√≠rculo: {self.raio}")

    def calcular_area(self):
        """Calcula e retorna a √°rea do c√≠rculo."""
        area = math.pi * (self.raio ** 2)
        print(f"√Årea do c√≠rculo: {area:.2f} unidades quadradas")
        return area

    def calcular_circunferencia(self):
        """Calcula e retorna a circunfer√™ncia do c√≠rculo."""
        circunferencia = 2 * math.pi * self.raio
        print(f"Circunfer√™ncia do c√≠rculo: {circunferencia:.2f} unidades")
        return circunferencia

# Exemplo de uso da classe
circulo1 = Circulo(5)

# Usando os m√©todos da classe
circulo1.imprimir_raio()             # Imprime o valor do raio
circulo1.calcular_area()             # Calcula e imprime a √°rea do c√≠rculo
circulo1.calcular_circunferencia()   # Calcula e imprime a circunfer√™ncia do c√≠rculo

# +++++++++++++++++=================================

# Explica√ß√£o do C√≥digo:
# Atributos:

# raio: Representa o raio do c√≠rculo.
# M√©todos:

# imprimir_raio(): Exibe o valor do raio do c√≠rculo.
# calcular_area(): Calcula a √°rea do c√≠rculo usando a f√≥rmula 
# Area = ùúã √ó raio 2
# Area = œÄ √ó raio 2
#   e exibe o resultado.
# calcular_circunferencia(): Calcula a circunfer√™ncia do c√≠rculo usando a f√≥rmula 
# Circunferencia = 2 √ó ùúã √ó raio
# Circunferencia = 2 √ó œÄ √ó raio e exibe o resultado.
# Exemplo de Uso:
# No exemplo, uma inst√¢ncia da classe Circulo √© criada com um raio de 5 unidades. Os m√©todos da classe s√£o utilizados para exibir o raio, calcular a √°rea, e calcular a circunfer√™ncia do c√≠rculo.